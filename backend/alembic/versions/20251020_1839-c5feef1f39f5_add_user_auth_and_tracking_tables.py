"""add_user_auth_and_tracking_tables

Revision ID: c5feef1f39f5
Revises: 001
Create Date: 2025-10-20 18:39:00.816127

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c5feef1f39f5'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('campaign_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('channel', sa.String(length=50), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('prospect_name', sa.String(length=255), nullable=True),
    sa.Column('prospect_profile', sa.String(length=500), nullable=True),
    sa.Column('message_sent', sa.Text(), nullable=True),
    sa.Column('response_text', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('responded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campaign_interactions_campaign_id'), 'campaign_interactions', ['campaign_id'], unique=False)
    op.create_index(op.f('ix_campaign_interactions_created_at'), 'campaign_interactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_campaign_interactions_id'), 'campaign_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_campaign_interactions_interaction_type'), 'campaign_interactions', ['interaction_type'], unique=False)
    op.create_table('link_clicks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('referrer', sa.String(length=500), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('utm_source', sa.String(length=100), nullable=True),
    sa.Column('utm_medium', sa.String(length=100), nullable=True),
    sa.Column('utm_campaign', sa.String(length=100), nullable=True),
    sa.Column('utm_content', sa.String(length=100), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_link_clicks_campaign_id'), 'link_clicks', ['campaign_id'], unique=False)
    op.create_index(op.f('ix_link_clicks_clicked_at'), 'link_clicks', ['clicked_at'], unique=False)
    op.create_index(op.f('ix_link_clicks_id'), 'link_clicks', ['id'], unique=False)

    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tracking_url', sa.String(length=500), nullable=True))
        batch_op.create_index(batch_op.f('ix_campaigns_user_id'), ['user_id'], unique=False)
        batch_op.create_foreign_key('fk_campaigns_user_id', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('campaigns', schema=None) as batch_op:
        batch_op.drop_constraint('fk_campaigns_user_id', type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_campaigns_user_id'))
        batch_op.drop_column('tracking_url')
        batch_op.drop_column('user_id')

    op.drop_index(op.f('ix_link_clicks_id'), table_name='link_clicks')
    op.drop_index(op.f('ix_link_clicks_clicked_at'), table_name='link_clicks')
    op.drop_index(op.f('ix_link_clicks_campaign_id'), table_name='link_clicks')
    op.drop_table('link_clicks')
    op.drop_index(op.f('ix_campaign_interactions_interaction_type'), table_name='campaign_interactions')
    op.drop_index(op.f('ix_campaign_interactions_id'), table_name='campaign_interactions')
    op.drop_index(op.f('ix_campaign_interactions_created_at'), table_name='campaign_interactions')
    op.drop_index(op.f('ix_campaign_interactions_campaign_id'), table_name='campaign_interactions')
    op.drop_table('campaign_interactions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
